🎯 方案1: 智能連接管理

問題: 每人連8-15鄰居造成過載
解決: 動態連接優化

核心策略:
1. 分層連接架構
- 核心連接: 3-4個最佳鄰居 (必須維持)
- 擴展連接: 2-4個次要鄰居 (可動態調整)
- 臨時連接: 按需建立的短期連接

2. 連接品質評分
```swift
func calculateConnectionScore(neighbor: Device) -> Double {
    let signalStrength = neighbor.signalStrength // -30到-80
    let stability = neighbor.connectionUptime // 0到1
    let load = 1.0 - neighbor.currentLoad // 避開高負載設備
    let mobility = 1.0 - neighbor.movementSpeed // 偏好靜止設備
    
    return (signalStrength + 50) / 50 * 0.4 + 
           stability * 0.3 + 
           load * 0.2 + 
           mobility * 0.1
}
```

3. 動態連接調整
- 每30秒評估連接品質
- 替換表現差的連接
- 在高負載時減少連接數
- 保持網路連通性的最小連接數

預期效果:
- 連接數從平均11個降到6-8個
- 計算負載減少30-40%
- 網路穩定性提升